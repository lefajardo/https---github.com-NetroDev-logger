//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18444.
// 
#pragma warning disable 1591

namespace InternalServices.Proxy.InternalServices.Soap {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="SoapzorSoap", Namespace="http://www.netromedia.com/")]
    public partial class Soapzor : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback ValidAuthKeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback PubPointIsAvailableOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetAllTermsAcceptedOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetTOBOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetTOSOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetTOUOperationCompleted;
        
        private System.Threading.SendOrPostCallback CallerIPOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckEmailStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProcessOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAccountIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatePubPointOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddCreditCardOperationCompleted;
        
        private System.Threading.SendOrPostCallback CloneOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback CloneServiceOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFileManagerKeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetupFreeTrialOperationCompleted;
        
        private System.Threading.SendOrPostCallback OrdersOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProgramsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ServicesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getMPISOperationCompleted;
        
        private System.Threading.SendOrPostCallback OrdersLineItemsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FTPServiceTableOperationCompleted;
        
        private System.Threading.SendOrPostCallback ServerLineItemsOperationCompleted;
        
        private System.Threading.SendOrPostCallback OrdersLineItemsDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback ServersPrimaryServiceOperationCompleted;
        
        private System.Threading.SendOrPostCallback getActiveStreamServersOperationCompleted;
        
        private System.Threading.SendOrPostCallback StreamCountersOperationCompleted;
        
        private System.Threading.SendOrPostCallback PublishDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback TermsAcceptedOperationCompleted;
        
        private System.Threading.SendOrPostCallback LineItemDeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidTokenOperationCompleted;
        
        private System.Threading.SendOrPostCallback OrderServiceCodesOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Soapzor() {
            this.Url = global::InternalServices.Proxy.Properties.Settings.Default.InternalServices_Proxy_InternalServices_Soap_Soapzor;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event ValidAuthKeyCompletedEventHandler ValidAuthKeyCompleted;
        
        /// <remarks/>
        public event PubPointIsAvailableCompletedEventHandler PubPointIsAvailableCompleted;
        
        /// <remarks/>
        public event SetAllTermsAcceptedCompletedEventHandler SetAllTermsAcceptedCompleted;
        
        /// <remarks/>
        public event SetTOBCompletedEventHandler SetTOBCompleted;
        
        /// <remarks/>
        public event SetTOSCompletedEventHandler SetTOSCompleted;
        
        /// <remarks/>
        public event SetTOUCompletedEventHandler SetTOUCompleted;
        
        /// <remarks/>
        public event CallerIPCompletedEventHandler CallerIPCompleted;
        
        /// <remarks/>
        public event CheckEmailStatusCompletedEventHandler CheckEmailStatusCompleted;
        
        /// <remarks/>
        public event ProcessOrderCompletedEventHandler ProcessOrderCompleted;
        
        /// <remarks/>
        public event getAccountIdCompletedEventHandler getAccountIdCompleted;
        
        /// <remarks/>
        public event UpdatePubPointCompletedEventHandler UpdatePubPointCompleted;
        
        /// <remarks/>
        public event AddCreditCardCompletedEventHandler AddCreditCardCompleted;
        
        /// <remarks/>
        public event CloneOrderCompletedEventHandler CloneOrderCompleted;
        
        /// <remarks/>
        public event CloneServiceCompletedEventHandler CloneServiceCompleted;
        
        /// <remarks/>
        public event GetFileManagerKeyCompletedEventHandler GetFileManagerKeyCompleted;
        
        /// <remarks/>
        public event SetupFreeTrialCompletedEventHandler SetupFreeTrialCompleted;
        
        /// <remarks/>
        public event OrdersCompletedEventHandler OrdersCompleted;
        
        /// <remarks/>
        public event ProgramsCompletedEventHandler ProgramsCompleted;
        
        /// <remarks/>
        public event ServicesCompletedEventHandler ServicesCompleted;
        
        /// <remarks/>
        public event getMPISCompletedEventHandler getMPISCompleted;
        
        /// <remarks/>
        public event OrdersLineItemsCompletedEventHandler OrdersLineItemsCompleted;
        
        /// <remarks/>
        public event FTPServiceTableCompletedEventHandler FTPServiceTableCompleted;
        
        /// <remarks/>
        public event ServerLineItemsCompletedEventHandler ServerLineItemsCompleted;
        
        /// <remarks/>
        public event OrdersLineItemsDetailCompletedEventHandler OrdersLineItemsDetailCompleted;
        
        /// <remarks/>
        public event ServersPrimaryServiceCompletedEventHandler ServersPrimaryServiceCompleted;
        
        /// <remarks/>
        public event getActiveStreamServersCompletedEventHandler getActiveStreamServersCompleted;
        
        /// <remarks/>
        public event StreamCountersCompletedEventHandler StreamCountersCompleted;
        
        /// <remarks/>
        public event PublishDetailsCompletedEventHandler PublishDetailsCompleted;
        
        /// <remarks/>
        public event TermsAcceptedCompletedEventHandler TermsAcceptedCompleted;
        
        /// <remarks/>
        public event LineItemDeleteCompletedEventHandler LineItemDeleteCompleted;
        
        /// <remarks/>
        public event ValidTokenCompletedEventHandler ValidTokenCompleted;
        
        /// <remarks/>
        public event OrderServiceCodesCompletedEventHandler OrderServiceCodesCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.netromedia.com/ValidAuthKey", RequestNamespace="http://www.netromedia.com/", ResponseNamespace="http://www.netromedia.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ValidAuthKey(System.Guid ID, System.Guid FileManagerAuthKey) {
            object[] results = this.Invoke("ValidAuthKey", new object[] {
                        ID,
                        FileManagerAuthKey});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ValidAuthKeyAsync(System.Guid ID, System.Guid FileManagerAuthKey) {
            this.ValidAuthKeyAsync(ID, FileManagerAuthKey, null);
        }
        
        /// <remarks/>
        public void ValidAuthKeyAsync(System.Guid ID, System.Guid FileManagerAuthKey, object userState) {
            if ((this.ValidAuthKeyOperationCompleted == null)) {
                this.ValidAuthKeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidAuthKeyOperationCompleted);
            }
            this.InvokeAsync("ValidAuthKey", new object[] {
                        ID,
                        FileManagerAuthKey}, this.ValidAuthKeyOperationCompleted, userState);
        }
        
        private void OnValidAuthKeyOperationCompleted(object arg) {
            if ((this.ValidAuthKeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidAuthKeyCompleted(this, new ValidAuthKeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.netromedia.com/PubPointIsAvailable", RequestNamespace="http://www.netromedia.com/", ResponseNamespace="http://www.netromedia.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool PubPointIsAvailable(System.Guid Key, string sPubPoint) {
            object[] results = this.Invoke("PubPointIsAvailable", new object[] {
                        Key,
                        sPubPoint});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void PubPointIsAvailableAsync(System.Guid Key, string sPubPoint) {
            this.PubPointIsAvailableAsync(Key, sPubPoint, null);
        }
        
        /// <remarks/>
        public void PubPointIsAvailableAsync(System.Guid Key, string sPubPoint, object userState) {
            if ((this.PubPointIsAvailableOperationCompleted == null)) {
                this.PubPointIsAvailableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPubPointIsAvailableOperationCompleted);
            }
            this.InvokeAsync("PubPointIsAvailable", new object[] {
                        Key,
                        sPubPoint}, this.PubPointIsAvailableOperationCompleted, userState);
        }
        
        private void OnPubPointIsAvailableOperationCompleted(object arg) {
            if ((this.PubPointIsAvailableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PubPointIsAvailableCompleted(this, new PubPointIsAvailableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.netromedia.com/SetAllTermsAccepted", RequestNamespace="http://www.netromedia.com/", ResponseNamespace="http://www.netromedia.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SetAllTermsAccepted(System.Guid Key, System.Guid gAccountID) {
            object[] results = this.Invoke("SetAllTermsAccepted", new object[] {
                        Key,
                        gAccountID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SetAllTermsAcceptedAsync(System.Guid Key, System.Guid gAccountID) {
            this.SetAllTermsAcceptedAsync(Key, gAccountID, null);
        }
        
        /// <remarks/>
        public void SetAllTermsAcceptedAsync(System.Guid Key, System.Guid gAccountID, object userState) {
            if ((this.SetAllTermsAcceptedOperationCompleted == null)) {
                this.SetAllTermsAcceptedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetAllTermsAcceptedOperationCompleted);
            }
            this.InvokeAsync("SetAllTermsAccepted", new object[] {
                        Key,
                        gAccountID}, this.SetAllTermsAcceptedOperationCompleted, userState);
        }
        
        private void OnSetAllTermsAcceptedOperationCompleted(object arg) {
            if ((this.SetAllTermsAcceptedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetAllTermsAcceptedCompleted(this, new SetAllTermsAcceptedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.netromedia.com/SetTOB", RequestNamespace="http://www.netromedia.com/", ResponseNamespace="http://www.netromedia.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SetTOB(System.Guid Key, System.Guid gAccountID, bool bAccepted) {
            object[] results = this.Invoke("SetTOB", new object[] {
                        Key,
                        gAccountID,
                        bAccepted});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SetTOBAsync(System.Guid Key, System.Guid gAccountID, bool bAccepted) {
            this.SetTOBAsync(Key, gAccountID, bAccepted, null);
        }
        
        /// <remarks/>
        public void SetTOBAsync(System.Guid Key, System.Guid gAccountID, bool bAccepted, object userState) {
            if ((this.SetTOBOperationCompleted == null)) {
                this.SetTOBOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetTOBOperationCompleted);
            }
            this.InvokeAsync("SetTOB", new object[] {
                        Key,
                        gAccountID,
                        bAccepted}, this.SetTOBOperationCompleted, userState);
        }
        
        private void OnSetTOBOperationCompleted(object arg) {
            if ((this.SetTOBCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetTOBCompleted(this, new SetTOBCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.netromedia.com/SetTOS", RequestNamespace="http://www.netromedia.com/", ResponseNamespace="http://www.netromedia.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SetTOS(System.Guid Key, System.Guid gAccountID, bool bAccepted) {
            object[] results = this.Invoke("SetTOS", new object[] {
                        Key,
                        gAccountID,
                        bAccepted});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SetTOSAsync(System.Guid Key, System.Guid gAccountID, bool bAccepted) {
            this.SetTOSAsync(Key, gAccountID, bAccepted, null);
        }
        
        /// <remarks/>
        public void SetTOSAsync(System.Guid Key, System.Guid gAccountID, bool bAccepted, object userState) {
            if ((this.SetTOSOperationCompleted == null)) {
                this.SetTOSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetTOSOperationCompleted);
            }
            this.InvokeAsync("SetTOS", new object[] {
                        Key,
                        gAccountID,
                        bAccepted}, this.SetTOSOperationCompleted, userState);
        }
        
        private void OnSetTOSOperationCompleted(object arg) {
            if ((this.SetTOSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetTOSCompleted(this, new SetTOSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.netromedia.com/SetTOU", RequestNamespace="http://www.netromedia.com/", ResponseNamespace="http://www.netromedia.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SetTOU(System.Guid Key, System.Guid gAccountID, bool bAccepted) {
            object[] results = this.Invoke("SetTOU", new object[] {
                        Key,
                        gAccountID,
                        bAccepted});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SetTOUAsync(System.Guid Key, System.Guid gAccountID, bool bAccepted) {
            this.SetTOUAsync(Key, gAccountID, bAccepted, null);
        }
        
        /// <remarks/>
        public void SetTOUAsync(System.Guid Key, System.Guid gAccountID, bool bAccepted, object userState) {
            if ((this.SetTOUOperationCompleted == null)) {
                this.SetTOUOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetTOUOperationCompleted);
            }
            this.InvokeAsync("SetTOU", new object[] {
                        Key,
                        gAccountID,
                        bAccepted}, this.SetTOUOperationCompleted, userState);
        }
        
        private void OnSetTOUOperationCompleted(object arg) {
            if ((this.SetTOUCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetTOUCompleted(this, new SetTOUCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.netromedia.com/CallerIP", RequestNamespace="http://www.netromedia.com/", ResponseNamespace="http://www.netromedia.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CallerIP() {
            object[] results = this.Invoke("CallerIP", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CallerIPAsync() {
            this.CallerIPAsync(null);
        }
        
        /// <remarks/>
        public void CallerIPAsync(object userState) {
            if ((this.CallerIPOperationCompleted == null)) {
                this.CallerIPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCallerIPOperationCompleted);
            }
            this.InvokeAsync("CallerIP", new object[0], this.CallerIPOperationCompleted, userState);
        }
        
        private void OnCallerIPOperationCompleted(object arg) {
            if ((this.CallerIPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CallerIPCompleted(this, new CallerIPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.netromedia.com/CheckEmailStatus", RequestNamespace="http://www.netromedia.com/", ResponseNamespace="http://www.netromedia.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CheckEmailStatus(System.Guid Key, string sEmail) {
            object[] results = this.Invoke("CheckEmailStatus", new object[] {
                        Key,
                        sEmail});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CheckEmailStatusAsync(System.Guid Key, string sEmail) {
            this.CheckEmailStatusAsync(Key, sEmail, null);
        }
        
        /// <remarks/>
        public void CheckEmailStatusAsync(System.Guid Key, string sEmail, object userState) {
            if ((this.CheckEmailStatusOperationCompleted == null)) {
                this.CheckEmailStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckEmailStatusOperationCompleted);
            }
            this.InvokeAsync("CheckEmailStatus", new object[] {
                        Key,
                        sEmail}, this.CheckEmailStatusOperationCompleted, userState);
        }
        
        private void OnCheckEmailStatusOperationCompleted(object arg) {
            if ((this.CheckEmailStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckEmailStatusCompleted(this, new CheckEmailStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.netromedia.com/ProcessOrder", RequestNamespace="http://www.netromedia.com/", ResponseNamespace="http://www.netromedia.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Guid ProcessOrder(System.Guid Key, System.Guid gOrderID) {
            object[] results = this.Invoke("ProcessOrder", new object[] {
                        Key,
                        gOrderID});
            return ((System.Guid)(results[0]));
        }
        
        /// <remarks/>
        public void ProcessOrderAsync(System.Guid Key, System.Guid gOrderID) {
            this.ProcessOrderAsync(Key, gOrderID, null);
        }
        
        /// <remarks/>
        public void ProcessOrderAsync(System.Guid Key, System.Guid gOrderID, object userState) {
            if ((this.ProcessOrderOperationCompleted == null)) {
                this.ProcessOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProcessOrderOperationCompleted);
            }
            this.InvokeAsync("ProcessOrder", new object[] {
                        Key,
                        gOrderID}, this.ProcessOrderOperationCompleted, userState);
        }
        
        private void OnProcessOrderOperationCompleted(object arg) {
            if ((this.ProcessOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProcessOrderCompleted(this, new ProcessOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.netromedia.com/getAccountId", RequestNamespace="http://www.netromedia.com/", ResponseNamespace="http://www.netromedia.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Guid getAccountId(System.Guid Key, System.Guid gContactId) {
            object[] results = this.Invoke("getAccountId", new object[] {
                        Key,
                        gContactId});
            return ((System.Guid)(results[0]));
        }
        
        /// <remarks/>
        public void getAccountIdAsync(System.Guid Key, System.Guid gContactId) {
            this.getAccountIdAsync(Key, gContactId, null);
        }
        
        /// <remarks/>
        public void getAccountIdAsync(System.Guid Key, System.Guid gContactId, object userState) {
            if ((this.getAccountIdOperationCompleted == null)) {
                this.getAccountIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAccountIdOperationCompleted);
            }
            this.InvokeAsync("getAccountId", new object[] {
                        Key,
                        gContactId}, this.getAccountIdOperationCompleted, userState);
        }
        
        private void OngetAccountIdOperationCompleted(object arg) {
            if ((this.getAccountIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAccountIdCompleted(this, new getAccountIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.netromedia.com/UpdatePubPoint", RequestNamespace="http://www.netromedia.com/", ResponseNamespace="http://www.netromedia.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Guid UpdatePubPoint(System.Guid Key, System.Guid gAccountID, System.Guid gPubPointID, int iQuantity, string sChannelName, string sServiceCode, string sPPType, int iMaxBitRate, int iMaxConnections) {
            object[] results = this.Invoke("UpdatePubPoint", new object[] {
                        Key,
                        gAccountID,
                        gPubPointID,
                        iQuantity,
                        sChannelName,
                        sServiceCode,
                        sPPType,
                        iMaxBitRate,
                        iMaxConnections});
            return ((System.Guid)(results[0]));
        }
        
        /// <remarks/>
        public void UpdatePubPointAsync(System.Guid Key, System.Guid gAccountID, System.Guid gPubPointID, int iQuantity, string sChannelName, string sServiceCode, string sPPType, int iMaxBitRate, int iMaxConnections) {
            this.UpdatePubPointAsync(Key, gAccountID, gPubPointID, iQuantity, sChannelName, sServiceCode, sPPType, iMaxBitRate, iMaxConnections, null);
        }
        
        /// <remarks/>
        public void UpdatePubPointAsync(System.Guid Key, System.Guid gAccountID, System.Guid gPubPointID, int iQuantity, string sChannelName, string sServiceCode, string sPPType, int iMaxBitRate, int iMaxConnections, object userState) {
            if ((this.UpdatePubPointOperationCompleted == null)) {
                this.UpdatePubPointOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatePubPointOperationCompleted);
            }
            this.InvokeAsync("UpdatePubPoint", new object[] {
                        Key,
                        gAccountID,
                        gPubPointID,
                        iQuantity,
                        sChannelName,
                        sServiceCode,
                        sPPType,
                        iMaxBitRate,
                        iMaxConnections}, this.UpdatePubPointOperationCompleted, userState);
        }
        
        private void OnUpdatePubPointOperationCompleted(object arg) {
            if ((this.UpdatePubPointCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatePubPointCompleted(this, new UpdatePubPointCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.netromedia.com/AddCreditCard", RequestNamespace="http://www.netromedia.com/", ResponseNamespace="http://www.netromedia.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Guid AddCreditCard(System.Guid Key, string sCardType, int iMonth, int iYear, string sCardNum, int iCVV, string sNameOnCard, System.Guid gAccountID, string sStreet, string sCity, string sState, string sCountry, string sPostalCode, ref System.Guid gCardID) {
            object[] results = this.Invoke("AddCreditCard", new object[] {
                        Key,
                        sCardType,
                        iMonth,
                        iYear,
                        sCardNum,
                        iCVV,
                        sNameOnCard,
                        gAccountID,
                        sStreet,
                        sCity,
                        sState,
                        sCountry,
                        sPostalCode,
                        gCardID});
            gCardID = ((System.Guid)(results[1]));
            return ((System.Guid)(results[0]));
        }
        
        /// <remarks/>
        public void AddCreditCardAsync(System.Guid Key, string sCardType, int iMonth, int iYear, string sCardNum, int iCVV, string sNameOnCard, System.Guid gAccountID, string sStreet, string sCity, string sState, string sCountry, string sPostalCode, System.Guid gCardID) {
            this.AddCreditCardAsync(Key, sCardType, iMonth, iYear, sCardNum, iCVV, sNameOnCard, gAccountID, sStreet, sCity, sState, sCountry, sPostalCode, gCardID, null);
        }
        
        /// <remarks/>
        public void AddCreditCardAsync(System.Guid Key, string sCardType, int iMonth, int iYear, string sCardNum, int iCVV, string sNameOnCard, System.Guid gAccountID, string sStreet, string sCity, string sState, string sCountry, string sPostalCode, System.Guid gCardID, object userState) {
            if ((this.AddCreditCardOperationCompleted == null)) {
                this.AddCreditCardOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddCreditCardOperationCompleted);
            }
            this.InvokeAsync("AddCreditCard", new object[] {
                        Key,
                        sCardType,
                        iMonth,
                        iYear,
                        sCardNum,
                        iCVV,
                        sNameOnCard,
                        gAccountID,
                        sStreet,
                        sCity,
                        sState,
                        sCountry,
                        sPostalCode,
                        gCardID}, this.AddCreditCardOperationCompleted, userState);
        }
        
        private void OnAddCreditCardOperationCompleted(object arg) {
            if ((this.AddCreditCardCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddCreditCardCompleted(this, new AddCreditCardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.netromedia.com/CloneOrder", RequestNamespace="http://www.netromedia.com/", ResponseNamespace="http://www.netromedia.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Guid CloneOrder(System.Guid Key, System.Guid gTemplateOrderID, System.Guid gAccountID, System.Guid gContactID) {
            object[] results = this.Invoke("CloneOrder", new object[] {
                        Key,
                        gTemplateOrderID,
                        gAccountID,
                        gContactID});
            return ((System.Guid)(results[0]));
        }
        
        /// <remarks/>
        public void CloneOrderAsync(System.Guid Key, System.Guid gTemplateOrderID, System.Guid gAccountID, System.Guid gContactID) {
            this.CloneOrderAsync(Key, gTemplateOrderID, gAccountID, gContactID, null);
        }
        
        /// <remarks/>
        public void CloneOrderAsync(System.Guid Key, System.Guid gTemplateOrderID, System.Guid gAccountID, System.Guid gContactID, object userState) {
            if ((this.CloneOrderOperationCompleted == null)) {
                this.CloneOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCloneOrderOperationCompleted);
            }
            this.InvokeAsync("CloneOrder", new object[] {
                        Key,
                        gTemplateOrderID,
                        gAccountID,
                        gContactID}, this.CloneOrderOperationCompleted, userState);
        }
        
        private void OnCloneOrderOperationCompleted(object arg) {
            if ((this.CloneOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CloneOrderCompleted(this, new CloneOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.netromedia.com/CloneService", RequestNamespace="http://www.netromedia.com/", ResponseNamespace="http://www.netromedia.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Guid CloneService(System.Guid Key, System.Guid gOrderID, int iPosition, System.Guid gServiceID, int iQuantity) {
            object[] results = this.Invoke("CloneService", new object[] {
                        Key,
                        gOrderID,
                        iPosition,
                        gServiceID,
                        iQuantity});
            return ((System.Guid)(results[0]));
        }
        
        /// <remarks/>
        public void CloneServiceAsync(System.Guid Key, System.Guid gOrderID, int iPosition, System.Guid gServiceID, int iQuantity) {
            this.CloneServiceAsync(Key, gOrderID, iPosition, gServiceID, iQuantity, null);
        }
        
        /// <remarks/>
        public void CloneServiceAsync(System.Guid Key, System.Guid gOrderID, int iPosition, System.Guid gServiceID, int iQuantity, object userState) {
            if ((this.CloneServiceOperationCompleted == null)) {
                this.CloneServiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCloneServiceOperationCompleted);
            }
            this.InvokeAsync("CloneService", new object[] {
                        Key,
                        gOrderID,
                        iPosition,
                        gServiceID,
                        iQuantity}, this.CloneServiceOperationCompleted, userState);
        }
        
        private void OnCloneServiceOperationCompleted(object arg) {
            if ((this.CloneServiceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CloneServiceCompleted(this, new CloneServiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.netromedia.com/GetFileManagerKey", RequestNamespace="http://www.netromedia.com/", ResponseNamespace="http://www.netromedia.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Guid GetFileManagerKey(System.Guid Key, System.Guid gLineItemID) {
            object[] results = this.Invoke("GetFileManagerKey", new object[] {
                        Key,
                        gLineItemID});
            return ((System.Guid)(results[0]));
        }
        
        /// <remarks/>
        public void GetFileManagerKeyAsync(System.Guid Key, System.Guid gLineItemID) {
            this.GetFileManagerKeyAsync(Key, gLineItemID, null);
        }
        
        /// <remarks/>
        public void GetFileManagerKeyAsync(System.Guid Key, System.Guid gLineItemID, object userState) {
            if ((this.GetFileManagerKeyOperationCompleted == null)) {
                this.GetFileManagerKeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFileManagerKeyOperationCompleted);
            }
            this.InvokeAsync("GetFileManagerKey", new object[] {
                        Key,
                        gLineItemID}, this.GetFileManagerKeyOperationCompleted, userState);
        }
        
        private void OnGetFileManagerKeyOperationCompleted(object arg) {
            if ((this.GetFileManagerKeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFileManagerKeyCompleted(this, new GetFileManagerKeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.netromedia.com/SetupFreeTrial", RequestNamespace="http://www.netromedia.com/", ResponseNamespace="http://www.netromedia.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Guid SetupFreeTrial(
                    System.Guid Key, 
                    ref System.Guid gID, 
                    ref string sReturnUrl, 
                    ref string sError, 
                    string sSalutation, 
                    string sFirstName, 
                    string sLastName, 
                    string sPubPoint, 
                    string sLastPageVisited, 
                    string sPhoneWork, 
                    string sEmail, 
                    string sStreet, 
                    string sCity, 
                    string sState, 
                    string sPostal, 
                    string sCountry, 
                    string sDescription, 
                    string sAccountName, 
                    string sMPI, 
                    string sAd, 
                    string sWebsiteUrl, 
                    string sSearchString) {
            object[] results = this.Invoke("SetupFreeTrial", new object[] {
                        Key,
                        gID,
                        sReturnUrl,
                        sError,
                        sSalutation,
                        sFirstName,
                        sLastName,
                        sPubPoint,
                        sLastPageVisited,
                        sPhoneWork,
                        sEmail,
                        sStreet,
                        sCity,
                        sState,
                        sPostal,
                        sCountry,
                        sDescription,
                        sAccountName,
                        sMPI,
                        sAd,
                        sWebsiteUrl,
                        sSearchString});
            gID = ((System.Guid)(results[1]));
            sReturnUrl = ((string)(results[2]));
            sError = ((string)(results[3]));
            return ((System.Guid)(results[0]));
        }
        
        /// <remarks/>
        public void SetupFreeTrialAsync(
                    System.Guid Key, 
                    System.Guid gID, 
                    string sReturnUrl, 
                    string sError, 
                    string sSalutation, 
                    string sFirstName, 
                    string sLastName, 
                    string sPubPoint, 
                    string sLastPageVisited, 
                    string sPhoneWork, 
                    string sEmail, 
                    string sStreet, 
                    string sCity, 
                    string sState, 
                    string sPostal, 
                    string sCountry, 
                    string sDescription, 
                    string sAccountName, 
                    string sMPI, 
                    string sAd, 
                    string sWebsiteUrl, 
                    string sSearchString) {
            this.SetupFreeTrialAsync(Key, gID, sReturnUrl, sError, sSalutation, sFirstName, sLastName, sPubPoint, sLastPageVisited, sPhoneWork, sEmail, sStreet, sCity, sState, sPostal, sCountry, sDescription, sAccountName, sMPI, sAd, sWebsiteUrl, sSearchString, null);
        }
        
        /// <remarks/>
        public void SetupFreeTrialAsync(
                    System.Guid Key, 
                    System.Guid gID, 
                    string sReturnUrl, 
                    string sError, 
                    string sSalutation, 
                    string sFirstName, 
                    string sLastName, 
                    string sPubPoint, 
                    string sLastPageVisited, 
                    string sPhoneWork, 
                    string sEmail, 
                    string sStreet, 
                    string sCity, 
                    string sState, 
                    string sPostal, 
                    string sCountry, 
                    string sDescription, 
                    string sAccountName, 
                    string sMPI, 
                    string sAd, 
                    string sWebsiteUrl, 
                    string sSearchString, 
                    object userState) {
            if ((this.SetupFreeTrialOperationCompleted == null)) {
                this.SetupFreeTrialOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetupFreeTrialOperationCompleted);
            }
            this.InvokeAsync("SetupFreeTrial", new object[] {
                        Key,
                        gID,
                        sReturnUrl,
                        sError,
                        sSalutation,
                        sFirstName,
                        sLastName,
                        sPubPoint,
                        sLastPageVisited,
                        sPhoneWork,
                        sEmail,
                        sStreet,
                        sCity,
                        sState,
                        sPostal,
                        sCountry,
                        sDescription,
                        sAccountName,
                        sMPI,
                        sAd,
                        sWebsiteUrl,
                        sSearchString}, this.SetupFreeTrialOperationCompleted, userState);
        }
        
        private void OnSetupFreeTrialOperationCompleted(object arg) {
            if ((this.SetupFreeTrialCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetupFreeTrialCompleted(this, new SetupFreeTrialCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.netromedia.com/Orders", RequestNamespace="http://www.netromedia.com/", ResponseNamespace="http://www.netromedia.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Orders(System.Guid Key, System.Guid gOrderID) {
            object[] results = this.Invoke("Orders", new object[] {
                        Key,
                        gOrderID});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void OrdersAsync(System.Guid Key, System.Guid gOrderID) {
            this.OrdersAsync(Key, gOrderID, null);
        }
        
        /// <remarks/>
        public void OrdersAsync(System.Guid Key, System.Guid gOrderID, object userState) {
            if ((this.OrdersOperationCompleted == null)) {
                this.OrdersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOrdersOperationCompleted);
            }
            this.InvokeAsync("Orders", new object[] {
                        Key,
                        gOrderID}, this.OrdersOperationCompleted, userState);
        }
        
        private void OnOrdersOperationCompleted(object arg) {
            if ((this.OrdersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OrdersCompleted(this, new OrdersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.netromedia.com/Programs", RequestNamespace="http://www.netromedia.com/", ResponseNamespace="http://www.netromedia.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Programs(System.Guid Key) {
            object[] results = this.Invoke("Programs", new object[] {
                        Key});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void ProgramsAsync(System.Guid Key) {
            this.ProgramsAsync(Key, null);
        }
        
        /// <remarks/>
        public void ProgramsAsync(System.Guid Key, object userState) {
            if ((this.ProgramsOperationCompleted == null)) {
                this.ProgramsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProgramsOperationCompleted);
            }
            this.InvokeAsync("Programs", new object[] {
                        Key}, this.ProgramsOperationCompleted, userState);
        }
        
        private void OnProgramsOperationCompleted(object arg) {
            if ((this.ProgramsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProgramsCompleted(this, new ProgramsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.netromedia.com/Services", RequestNamespace="http://www.netromedia.com/", ResponseNamespace="http://www.netromedia.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Services(System.Guid Key) {
            object[] results = this.Invoke("Services", new object[] {
                        Key});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void ServicesAsync(System.Guid Key) {
            this.ServicesAsync(Key, null);
        }
        
        /// <remarks/>
        public void ServicesAsync(System.Guid Key, object userState) {
            if ((this.ServicesOperationCompleted == null)) {
                this.ServicesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnServicesOperationCompleted);
            }
            this.InvokeAsync("Services", new object[] {
                        Key}, this.ServicesOperationCompleted, userState);
        }
        
        private void OnServicesOperationCompleted(object arg) {
            if ((this.ServicesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ServicesCompleted(this, new ServicesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.netromedia.com/getMPIS", RequestNamespace="http://www.netromedia.com/", ResponseNamespace="http://www.netromedia.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable getMPIS(System.Guid Key) {
            object[] results = this.Invoke("getMPIS", new object[] {
                        Key});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void getMPISAsync(System.Guid Key) {
            this.getMPISAsync(Key, null);
        }
        
        /// <remarks/>
        public void getMPISAsync(System.Guid Key, object userState) {
            if ((this.getMPISOperationCompleted == null)) {
                this.getMPISOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetMPISOperationCompleted);
            }
            this.InvokeAsync("getMPIS", new object[] {
                        Key}, this.getMPISOperationCompleted, userState);
        }
        
        private void OngetMPISOperationCompleted(object arg) {
            if ((this.getMPISCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getMPISCompleted(this, new getMPISCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.netromedia.com/OrdersLineItems", RequestNamespace="http://www.netromedia.com/", ResponseNamespace="http://www.netromedia.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable OrdersLineItems(System.Guid Key, System.Guid gOrderID) {
            object[] results = this.Invoke("OrdersLineItems", new object[] {
                        Key,
                        gOrderID});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void OrdersLineItemsAsync(System.Guid Key, System.Guid gOrderID) {
            this.OrdersLineItemsAsync(Key, gOrderID, null);
        }
        
        /// <remarks/>
        public void OrdersLineItemsAsync(System.Guid Key, System.Guid gOrderID, object userState) {
            if ((this.OrdersLineItemsOperationCompleted == null)) {
                this.OrdersLineItemsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOrdersLineItemsOperationCompleted);
            }
            this.InvokeAsync("OrdersLineItems", new object[] {
                        Key,
                        gOrderID}, this.OrdersLineItemsOperationCompleted, userState);
        }
        
        private void OnOrdersLineItemsOperationCompleted(object arg) {
            if ((this.OrdersLineItemsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OrdersLineItemsCompleted(this, new OrdersLineItemsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.netromedia.com/FTPServiceTable", RequestNamespace="http://www.netromedia.com/", ResponseNamespace="http://www.netromedia.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable FTPServiceTable(System.Guid Key, string serverIP) {
            object[] results = this.Invoke("FTPServiceTable", new object[] {
                        Key,
                        serverIP});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void FTPServiceTableAsync(System.Guid Key, string serverIP) {
            this.FTPServiceTableAsync(Key, serverIP, null);
        }
        
        /// <remarks/>
        public void FTPServiceTableAsync(System.Guid Key, string serverIP, object userState) {
            if ((this.FTPServiceTableOperationCompleted == null)) {
                this.FTPServiceTableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFTPServiceTableOperationCompleted);
            }
            this.InvokeAsync("FTPServiceTable", new object[] {
                        Key,
                        serverIP}, this.FTPServiceTableOperationCompleted, userState);
        }
        
        private void OnFTPServiceTableOperationCompleted(object arg) {
            if ((this.FTPServiceTableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FTPServiceTableCompleted(this, new FTPServiceTableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.netromedia.com/ServerLineItems", RequestNamespace="http://www.netromedia.com/", ResponseNamespace="http://www.netromedia.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable ServerLineItems(System.Guid Key, string serverIP) {
            object[] results = this.Invoke("ServerLineItems", new object[] {
                        Key,
                        serverIP});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void ServerLineItemsAsync(System.Guid Key, string serverIP) {
            this.ServerLineItemsAsync(Key, serverIP, null);
        }
        
        /// <remarks/>
        public void ServerLineItemsAsync(System.Guid Key, string serverIP, object userState) {
            if ((this.ServerLineItemsOperationCompleted == null)) {
                this.ServerLineItemsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnServerLineItemsOperationCompleted);
            }
            this.InvokeAsync("ServerLineItems", new object[] {
                        Key,
                        serverIP}, this.ServerLineItemsOperationCompleted, userState);
        }
        
        private void OnServerLineItemsOperationCompleted(object arg) {
            if ((this.ServerLineItemsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ServerLineItemsCompleted(this, new ServerLineItemsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.netromedia.com/OrdersLineItemsDetail", RequestNamespace="http://www.netromedia.com/", ResponseNamespace="http://www.netromedia.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable OrdersLineItemsDetail(System.Guid Key, System.Guid gOrderLineItemID) {
            object[] results = this.Invoke("OrdersLineItemsDetail", new object[] {
                        Key,
                        gOrderLineItemID});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void OrdersLineItemsDetailAsync(System.Guid Key, System.Guid gOrderLineItemID) {
            this.OrdersLineItemsDetailAsync(Key, gOrderLineItemID, null);
        }
        
        /// <remarks/>
        public void OrdersLineItemsDetailAsync(System.Guid Key, System.Guid gOrderLineItemID, object userState) {
            if ((this.OrdersLineItemsDetailOperationCompleted == null)) {
                this.OrdersLineItemsDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOrdersLineItemsDetailOperationCompleted);
            }
            this.InvokeAsync("OrdersLineItemsDetail", new object[] {
                        Key,
                        gOrderLineItemID}, this.OrdersLineItemsDetailOperationCompleted, userState);
        }
        
        private void OnOrdersLineItemsDetailOperationCompleted(object arg) {
            if ((this.OrdersLineItemsDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OrdersLineItemsDetailCompleted(this, new OrdersLineItemsDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.netromedia.com/ServersPrimaryService", RequestNamespace="http://www.netromedia.com/", ResponseNamespace="http://www.netromedia.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ServersPrimaryService(System.Guid Key, string serverIP) {
            object[] results = this.Invoke("ServersPrimaryService", new object[] {
                        Key,
                        serverIP});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ServersPrimaryServiceAsync(System.Guid Key, string serverIP) {
            this.ServersPrimaryServiceAsync(Key, serverIP, null);
        }
        
        /// <remarks/>
        public void ServersPrimaryServiceAsync(System.Guid Key, string serverIP, object userState) {
            if ((this.ServersPrimaryServiceOperationCompleted == null)) {
                this.ServersPrimaryServiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnServersPrimaryServiceOperationCompleted);
            }
            this.InvokeAsync("ServersPrimaryService", new object[] {
                        Key,
                        serverIP}, this.ServersPrimaryServiceOperationCompleted, userState);
        }
        
        private void OnServersPrimaryServiceOperationCompleted(object arg) {
            if ((this.ServersPrimaryServiceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ServersPrimaryServiceCompleted(this, new ServersPrimaryServiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.netromedia.com/getActiveStreamServers", RequestNamespace="http://www.netromedia.com/", ResponseNamespace="http://www.netromedia.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getActiveStreamServers(System.Guid Key) {
            object[] results = this.Invoke("getActiveStreamServers", new object[] {
                        Key});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getActiveStreamServersAsync(System.Guid Key) {
            this.getActiveStreamServersAsync(Key, null);
        }
        
        /// <remarks/>
        public void getActiveStreamServersAsync(System.Guid Key, object userState) {
            if ((this.getActiveStreamServersOperationCompleted == null)) {
                this.getActiveStreamServersOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetActiveStreamServersOperationCompleted);
            }
            this.InvokeAsync("getActiveStreamServers", new object[] {
                        Key}, this.getActiveStreamServersOperationCompleted, userState);
        }
        
        private void OngetActiveStreamServersOperationCompleted(object arg) {
            if ((this.getActiveStreamServersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getActiveStreamServersCompleted(this, new getActiveStreamServersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.netromedia.com/StreamCounters", RequestNamespace="http://www.netromedia.com/", ResponseNamespace="http://www.netromedia.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable StreamCounters(System.Guid Key, string BILLING_ACCOUNT_ID) {
            object[] results = this.Invoke("StreamCounters", new object[] {
                        Key,
                        BILLING_ACCOUNT_ID});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void StreamCountersAsync(System.Guid Key, string BILLING_ACCOUNT_ID) {
            this.StreamCountersAsync(Key, BILLING_ACCOUNT_ID, null);
        }
        
        /// <remarks/>
        public void StreamCountersAsync(System.Guid Key, string BILLING_ACCOUNT_ID, object userState) {
            if ((this.StreamCountersOperationCompleted == null)) {
                this.StreamCountersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStreamCountersOperationCompleted);
            }
            this.InvokeAsync("StreamCounters", new object[] {
                        Key,
                        BILLING_ACCOUNT_ID}, this.StreamCountersOperationCompleted, userState);
        }
        
        private void OnStreamCountersOperationCompleted(object arg) {
            if ((this.StreamCountersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StreamCountersCompleted(this, new StreamCountersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.netromedia.com/PublishDetails", RequestNamespace="http://www.netromedia.com/", ResponseNamespace="http://www.netromedia.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable PublishDetails(System.Guid Key, System.Guid gOrderLineItemID) {
            object[] results = this.Invoke("PublishDetails", new object[] {
                        Key,
                        gOrderLineItemID});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void PublishDetailsAsync(System.Guid Key, System.Guid gOrderLineItemID) {
            this.PublishDetailsAsync(Key, gOrderLineItemID, null);
        }
        
        /// <remarks/>
        public void PublishDetailsAsync(System.Guid Key, System.Guid gOrderLineItemID, object userState) {
            if ((this.PublishDetailsOperationCompleted == null)) {
                this.PublishDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPublishDetailsOperationCompleted);
            }
            this.InvokeAsync("PublishDetails", new object[] {
                        Key,
                        gOrderLineItemID}, this.PublishDetailsOperationCompleted, userState);
        }
        
        private void OnPublishDetailsOperationCompleted(object arg) {
            if ((this.PublishDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PublishDetailsCompleted(this, new PublishDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.netromedia.com/TermsAccepted", RequestNamespace="http://www.netromedia.com/", ResponseNamespace="http://www.netromedia.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void TermsAccepted(System.Guid Key, System.Guid gAccountID, ref bool TOBAccepted, ref bool TOSAccepted, ref bool TOUAccepted) {
            object[] results = this.Invoke("TermsAccepted", new object[] {
                        Key,
                        gAccountID,
                        TOBAccepted,
                        TOSAccepted,
                        TOUAccepted});
            TOBAccepted = ((bool)(results[0]));
            TOSAccepted = ((bool)(results[1]));
            TOUAccepted = ((bool)(results[2]));
        }
        
        /// <remarks/>
        public void TermsAcceptedAsync(System.Guid Key, System.Guid gAccountID, bool TOBAccepted, bool TOSAccepted, bool TOUAccepted) {
            this.TermsAcceptedAsync(Key, gAccountID, TOBAccepted, TOSAccepted, TOUAccepted, null);
        }
        
        /// <remarks/>
        public void TermsAcceptedAsync(System.Guid Key, System.Guid gAccountID, bool TOBAccepted, bool TOSAccepted, bool TOUAccepted, object userState) {
            if ((this.TermsAcceptedOperationCompleted == null)) {
                this.TermsAcceptedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTermsAcceptedOperationCompleted);
            }
            this.InvokeAsync("TermsAccepted", new object[] {
                        Key,
                        gAccountID,
                        TOBAccepted,
                        TOSAccepted,
                        TOUAccepted}, this.TermsAcceptedOperationCompleted, userState);
        }
        
        private void OnTermsAcceptedOperationCompleted(object arg) {
            if ((this.TermsAcceptedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TermsAcceptedCompleted(this, new TermsAcceptedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.netromedia.com/LineItemDelete", RequestNamespace="http://www.netromedia.com/", ResponseNamespace="http://www.netromedia.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void LineItemDelete(System.Guid Key, System.Guid gOrderLineItemID) {
            this.Invoke("LineItemDelete", new object[] {
                        Key,
                        gOrderLineItemID});
        }
        
        /// <remarks/>
        public void LineItemDeleteAsync(System.Guid Key, System.Guid gOrderLineItemID) {
            this.LineItemDeleteAsync(Key, gOrderLineItemID, null);
        }
        
        /// <remarks/>
        public void LineItemDeleteAsync(System.Guid Key, System.Guid gOrderLineItemID, object userState) {
            if ((this.LineItemDeleteOperationCompleted == null)) {
                this.LineItemDeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLineItemDeleteOperationCompleted);
            }
            this.InvokeAsync("LineItemDelete", new object[] {
                        Key,
                        gOrderLineItemID}, this.LineItemDeleteOperationCompleted, userState);
        }
        
        private void OnLineItemDeleteOperationCompleted(object arg) {
            if ((this.LineItemDeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LineItemDeleteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.netromedia.com/ValidToken", RequestNamespace="http://www.netromedia.com/", ResponseNamespace="http://www.netromedia.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ValidToken(System.Guid Key, string sToken) {
            object[] results = this.Invoke("ValidToken", new object[] {
                        Key,
                        sToken});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ValidTokenAsync(System.Guid Key, string sToken) {
            this.ValidTokenAsync(Key, sToken, null);
        }
        
        /// <remarks/>
        public void ValidTokenAsync(System.Guid Key, string sToken, object userState) {
            if ((this.ValidTokenOperationCompleted == null)) {
                this.ValidTokenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidTokenOperationCompleted);
            }
            this.InvokeAsync("ValidToken", new object[] {
                        Key,
                        sToken}, this.ValidTokenOperationCompleted, userState);
        }
        
        private void OnValidTokenOperationCompleted(object arg) {
            if ((this.ValidTokenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidTokenCompleted(this, new ValidTokenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.netromedia.com/OrderServiceCodes", RequestNamespace="http://www.netromedia.com/", ResponseNamespace="http://www.netromedia.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable OrderServiceCodes(System.Guid Key, System.Guid gOrderID) {
            object[] results = this.Invoke("OrderServiceCodes", new object[] {
                        Key,
                        gOrderID});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void OrderServiceCodesAsync(System.Guid Key, System.Guid gOrderID) {
            this.OrderServiceCodesAsync(Key, gOrderID, null);
        }
        
        /// <remarks/>
        public void OrderServiceCodesAsync(System.Guid Key, System.Guid gOrderID, object userState) {
            if ((this.OrderServiceCodesOperationCompleted == null)) {
                this.OrderServiceCodesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOrderServiceCodesOperationCompleted);
            }
            this.InvokeAsync("OrderServiceCodes", new object[] {
                        Key,
                        gOrderID}, this.OrderServiceCodesOperationCompleted, userState);
        }
        
        private void OnOrderServiceCodesOperationCompleted(object arg) {
            if ((this.OrderServiceCodesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OrderServiceCodesCompleted(this, new OrderServiceCodesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ValidAuthKeyCompletedEventHandler(object sender, ValidAuthKeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidAuthKeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidAuthKeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void PubPointIsAvailableCompletedEventHandler(object sender, PubPointIsAvailableCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PubPointIsAvailableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PubPointIsAvailableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void SetAllTermsAcceptedCompletedEventHandler(object sender, SetAllTermsAcceptedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetAllTermsAcceptedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetAllTermsAcceptedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void SetTOBCompletedEventHandler(object sender, SetTOBCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetTOBCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetTOBCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void SetTOSCompletedEventHandler(object sender, SetTOSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetTOSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetTOSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void SetTOUCompletedEventHandler(object sender, SetTOUCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetTOUCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetTOUCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void CallerIPCompletedEventHandler(object sender, CallerIPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CallerIPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CallerIPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void CheckEmailStatusCompletedEventHandler(object sender, CheckEmailStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckEmailStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckEmailStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ProcessOrderCompletedEventHandler(object sender, ProcessOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProcessOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProcessOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Guid Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Guid)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void getAccountIdCompletedEventHandler(object sender, getAccountIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAccountIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAccountIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Guid Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Guid)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void UpdatePubPointCompletedEventHandler(object sender, UpdatePubPointCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdatePubPointCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdatePubPointCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Guid Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Guid)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void AddCreditCardCompletedEventHandler(object sender, AddCreditCardCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddCreditCardCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddCreditCardCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Guid Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Guid)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Guid gCardID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Guid)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void CloneOrderCompletedEventHandler(object sender, CloneOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CloneOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CloneOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Guid Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Guid)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void CloneServiceCompletedEventHandler(object sender, CloneServiceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CloneServiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CloneServiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Guid Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Guid)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetFileManagerKeyCompletedEventHandler(object sender, GetFileManagerKeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFileManagerKeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFileManagerKeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Guid Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Guid)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void SetupFreeTrialCompletedEventHandler(object sender, SetupFreeTrialCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetupFreeTrialCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetupFreeTrialCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Guid Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Guid)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Guid gID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Guid)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string sReturnUrl {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string sError {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void OrdersCompletedEventHandler(object sender, OrdersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OrdersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal OrdersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ProgramsCompletedEventHandler(object sender, ProgramsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProgramsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProgramsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ServicesCompletedEventHandler(object sender, ServicesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ServicesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ServicesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void getMPISCompletedEventHandler(object sender, getMPISCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getMPISCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getMPISCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void OrdersLineItemsCompletedEventHandler(object sender, OrdersLineItemsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OrdersLineItemsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal OrdersLineItemsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void FTPServiceTableCompletedEventHandler(object sender, FTPServiceTableCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FTPServiceTableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FTPServiceTableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ServerLineItemsCompletedEventHandler(object sender, ServerLineItemsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ServerLineItemsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ServerLineItemsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void OrdersLineItemsDetailCompletedEventHandler(object sender, OrdersLineItemsDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OrdersLineItemsDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal OrdersLineItemsDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ServersPrimaryServiceCompletedEventHandler(object sender, ServersPrimaryServiceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ServersPrimaryServiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ServersPrimaryServiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void getActiveStreamServersCompletedEventHandler(object sender, getActiveStreamServersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getActiveStreamServersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getActiveStreamServersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void StreamCountersCompletedEventHandler(object sender, StreamCountersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StreamCountersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StreamCountersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void PublishDetailsCompletedEventHandler(object sender, PublishDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PublishDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PublishDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void TermsAcceptedCompletedEventHandler(object sender, TermsAcceptedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TermsAcceptedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TermsAcceptedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool TOBAccepted {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool TOSAccepted {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public bool TOUAccepted {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void LineItemDeleteCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ValidTokenCompletedEventHandler(object sender, ValidTokenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidTokenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidTokenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void OrderServiceCodesCompletedEventHandler(object sender, OrderServiceCodesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OrderServiceCodesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal OrderServiceCodesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591